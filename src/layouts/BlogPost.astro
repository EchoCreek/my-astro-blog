---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="zh-CN">
	<head>

		{/* --- 新增部分 --- */}
        <script is:inline>
            const getTheme = () => {
                // 读取用户在切换器中选择的偏好 ('light', 'dark', 'auto')
                let preference = localStorage.getItem('theme-preference');
                if (!preference) {
                    // 如果用户从未设置过，则默认为 'auto'
                    preference = 'auto';
                }

                if (preference === 'auto') {
                    // “自动”模式下，跟随系统
                    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
                }

                // “明亮”或“黑暗”模式下，直接返回用户的选择
                return preference;
            };

            const theme = getTheme();
            document.documentElement.dataset.theme = theme;
        </script>
        {/* --- 新增部分结束 --- */}

		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: var(--font-color);
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: var(--font-color);
				opacity: 0.7;
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<div class="page-wrapper">
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
		</div>
	</body>
</html>
