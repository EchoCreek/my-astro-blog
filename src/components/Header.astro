---
// src/components/Header.astro
import ThemeToggler from './ThemeToggler.astro';
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';

import IconBilibili from './Icon/IconBilibili.astro';
import IconGitHub from './Icon/IconGitHub.astro';
---

<header>
	<nav>
        {/* 新增：左侧容器，包裹 Logo 和内部链接 */}
		<div class="nav-left">
			<h2><a href="/">{SITE_TITLE}</a></h2>
			<div class="internal-links">
				<HeaderLink href="/">首页</HeaderLink>
				<HeaderLink href="/blog">文章</HeaderLink>
				<HeaderLink href="/tags">标签</HeaderLink>
				<HeaderLink href="/about">关于</HeaderLink>
			</div>
		</div>

        {/* 新增：右侧容器，包裹社交链接和主题切换器 */}
		<div class="nav-right">
			<div class="social-links">
		<a href="https://space.bilibili.com/36778438" target="_blank" aria-label="Bilibili">
				<IconBilibili size={32} />
			</a>
			<a href="https://github.com/EchoCreek" target="_blank" aria-label="GitHub">
				<IconGitHub size={32} />
			</a>
		</div>
            {/* 将主题切换器移动到这里 */}
			<ThemeToggler />

			<button class="hamburger" aria-label="打开菜单">
				<span class="line"></span>
				<span class="line"></span>
				<span class="line"></span>
			</button>
		</div>
	</nav>

	<div class="mobile-menu">
		<HeaderLink href="/">首页</HeaderLink>
		<HeaderLink href="/blog">文章</HeaderLink>
		<HeaderLink href="/tags">标签</HeaderLink>
		<HeaderLink href="/about">关于</HeaderLink>
		<div class="social-links-mobile">
		<a href="https://space.bilibili.com/36778438" target="_blank" aria-label="Bilibili">
				<IconBilibili size={32} />
			</a>
			<a href="https://github.com/EchoCreek" target="_blank" aria-label="GitHub">
				<IconGitHub size={32} />
			</a>
		</div>
	</div>
</header>

<script>
    const hamburger = document.querySelector('.hamburger');
    const mobileMenu = document.querySelector('.mobile-menu');

    if (hamburger && mobileMenu) {
        hamburger.addEventListener('click', () => {
            // 切换汉堡按钮自身的 active 状态 (用于播放 X 动画)
            hamburger.classList.toggle('is-active');
            // 切换移动菜单面板的 open 状态 (用于滑入滑出)
            mobileMenu.classList.toggle('is-open');
        });
    }
</script>

<style>
	header {
		margin: 0;
		padding: 0 1em;
		background-color: var(--header-bg);
		box-shadow: 0 2px 8px rgba(var(--black), 0.05); /* 稍微调整了阴影，更适配暗黑模式 */
	
		position: relative; /* 为绝对定位的子元素 (移动菜单) 提供定位基准 */
	}
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between; /* 核心：让左右容器两端对齐 */
		padding: 0.5rem 0;
	}

    /* 新增：定义左右容器的样式 */
    .nav-left, .nav-right {
        display: flex;
        align-items: center;
        gap: 1.5rem; /* 控制容器内部大元素之间的间距 */
    }

	h2 {
		margin: 0;
		font-size: 1.2em;
	}
	h2 a,
	h2 a.active {
		text-decoration: none;
		color: var(--heading-color);
	}

    /* 修改：为 internal-links 添加 flex 和 gap */
	.internal-links {
		display: flex;
		gap: 1rem;
	}
	.internal-links a {
		padding: 0.5em;
		color: var(--font-color);
		border-bottom: 4px solid transparent;
		text-decoration: none;
        transition: color 0.2s ease, border-color 0.2s ease;
	}
	.internal-links a.active {
		text-decoration: none;
		border-bottom-color: var(--link-color);
        color: var(--link-color);
	}
    .internal-links a:hover {
        color: var(--link-color);
    }


	.social-links {
		display: flex;
		gap: 0.75rem;
	}
	.social-links a {
		display: flex;
		align-items: center;
		color: var(--font-color);
        transition: color 0.2s ease;
	}
    .social-links a:hover {
        color: var(--link-color);
    }

	@media (max-width: 720px) {
        /* 在小屏幕上隐藏内部链接和社交链接，只留 Logo 和主题切换器 */
		.internal-links,
		.social-links {
			display: none;
		}
		/* 在移动端显示汉堡按钮 */
		.hamburger {
			display: flex;
		}
	}

	/* --- ▼▼▼ 添加以下所有样式 ▼▼▼ --- */

	/* 汉堡按钮的样式 */
	.hamburger {
		flex-direction: column;
		justify-content: space-around;
		width: 2rem;
		height: 2rem;
		background: transparent;
		border: none;
		cursor: pointer;
		padding: 0;
		z-index: 20;
	}
	.hamburger .line {
		width: 2rem;
		height: 0.25rem;
		background: var(--font-color);
		border-radius: 10px;
		transition: all 0.3s linear;
		position: relative;
		transform-origin: 1px;
	}
	/* 汉堡按钮被点击后的 “X” 动画 */
	.hamburger.is-active .line:nth-child(1) {
		transform: rotate(45deg);
	}
	.hamburger.is-active .line:nth-child(2) {
		opacity: 0;
		transform: translateX(20px);
	}
	.hamburger.is-active .line:nth-child(3) {
		transform: rotate(-45deg);
	}

	/* 移动端菜单面板的样式 */
	.mobile-menu {
		display: flex; /* 保持 flex 布局，但用下面的属性隐藏它 */
		flex-direction: column;
		align-items: center;
		gap: 1.5rem;
		padding: 4rem 1rem 2rem;
		background: var(--header-bg);
		position: absolute;
		top: 100%;
		left: 0;
		right: 0;
		z-index: 10;
		box-shadow: 0 8px 16px rgba(var(--black), 0.1);

		/* --- ▼▼▼ 添加下面这行 ▼▼▼ --- */
    	border-radius: 0 0 12px 12px; /* 上左 上右 下右 下左 */

		/* --- 核心修正：使用 visibility 和 opacity 来控制显隐和动画 --- */
		visibility: hidden;
		opacity: 0;
		transform: translateY(-1rem); /* 从稍微靠上的位置滑出，效果更好 */
		transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s;
	}

	/* 菜单打开时的状态 */
	.mobile-menu.is-open {
		visibility: visible;
		opacity: 1;
		transform: translateY(0); /* 滑入屏幕 */
	}
	.mobile-menu a {
		color: var(--font-color);
		font-size: 1.5rem;
		text-decoration: none;
	}
	.social-links-mobile {
		display: flex;
		gap: 1.5rem;
		margin-top: 1rem;
	}
	.social-links-mobile a {
		color: var(--font-color);
	}
	/* --- ▲▲▲ 添加结束 ▲▲▲ --- */
</style>